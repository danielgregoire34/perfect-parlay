{"ast":null,"code":"import pathToRegexp from \"path-to-regexp\";\nvar patternCache = {};\nvar cacheLimit = 10000;\nvar cacheCount = 0;\nvar compilePath = function compilePath(pattern, options) {\n  var cacheKey = \"\" + options.end + options.strict + options.sensitive;\n  var cache = patternCache[cacheKey] || (patternCache[cacheKey] = {});\n  if (cache[pattern]) return cache[pattern];\n  var keys = [];\n  var re = pathToRegexp(pattern, keys, options);\n  var compiledPattern = {\n    re: re,\n    keys: keys\n  };\n  if (cacheCount < cacheLimit) {\n    cache[pattern] = compiledPattern;\n    cacheCount++;\n  }\n  return compiledPattern;\n};\n\n/**\n * Public API for matching a URL pathname to a path pattern.\n */\nvar matchPath = function matchPath(pathname) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var parent = arguments[2];\n  if (typeof options === \"string\") options = {\n    path: options\n  };\n  var _options = options,\n    path = _options.path,\n    _options$exact = _options.exact,\n    exact = _options$exact === undefined ? false : _options$exact,\n    _options$strict = _options.strict,\n    strict = _options$strict === undefined ? false : _options$strict,\n    _options$sensitive = _options.sensitive,\n    sensitive = _options$sensitive === undefined ? false : _options$sensitive;\n  if (path == null) return parent;\n  var _compilePath = compilePath(path, {\n      end: exact,\n      strict: strict,\n      sensitive: sensitive\n    }),\n    re = _compilePath.re,\n    keys = _compilePath.keys;\n  var match = re.exec(pathname);\n  if (!match) return null;\n  var url = match[0],\n    values = match.slice(1);\n  var isExact = pathname === url;\n  if (exact && !isExact) return null;\n  return {\n    path: path,\n    // the path pattern used to match\n    url: path === \"/\" && url === \"\" ? \"/\" : url,\n    // the matched portion of the URL\n    isExact: isExact,\n    // whether or not we matched exactly\n    params: keys.reduce(function (memo, key, index) {\n      memo[key.name] = values[index];\n      return memo;\n    }, {})\n  };\n};\nexport default matchPath;","map":{"version":3,"names":["pathToRegexp","patternCache","cacheLimit","cacheCount","compilePath","pattern","options","cacheKey","end","strict","sensitive","cache","keys","re","compiledPattern","matchPath","pathname","arguments","length","undefined","parent","path","_options","_options$exact","exact","_options$strict","_options$sensitive","_compilePath","match","exec","url","values","slice","isExact","params","reduce","memo","key","index","name"],"sources":["C:/Users/Daniel Gregoire/Desktop/ucf-bootcamp/perfect-parlay/node_modules/react-router/es/matchPath.js"],"sourcesContent":["import pathToRegexp from \"path-to-regexp\";\n\nvar patternCache = {};\nvar cacheLimit = 10000;\nvar cacheCount = 0;\n\nvar compilePath = function compilePath(pattern, options) {\n  var cacheKey = \"\" + options.end + options.strict + options.sensitive;\n  var cache = patternCache[cacheKey] || (patternCache[cacheKey] = {});\n\n  if (cache[pattern]) return cache[pattern];\n\n  var keys = [];\n  var re = pathToRegexp(pattern, keys, options);\n  var compiledPattern = { re: re, keys: keys };\n\n  if (cacheCount < cacheLimit) {\n    cache[pattern] = compiledPattern;\n    cacheCount++;\n  }\n\n  return compiledPattern;\n};\n\n/**\n * Public API for matching a URL pathname to a path pattern.\n */\nvar matchPath = function matchPath(pathname) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var parent = arguments[2];\n\n  if (typeof options === \"string\") options = { path: options };\n\n  var _options = options,\n      path = _options.path,\n      _options$exact = _options.exact,\n      exact = _options$exact === undefined ? false : _options$exact,\n      _options$strict = _options.strict,\n      strict = _options$strict === undefined ? false : _options$strict,\n      _options$sensitive = _options.sensitive,\n      sensitive = _options$sensitive === undefined ? false : _options$sensitive;\n\n\n  if (path == null) return parent;\n\n  var _compilePath = compilePath(path, { end: exact, strict: strict, sensitive: sensitive }),\n      re = _compilePath.re,\n      keys = _compilePath.keys;\n\n  var match = re.exec(pathname);\n\n  if (!match) return null;\n\n  var url = match[0],\n      values = match.slice(1);\n\n  var isExact = pathname === url;\n\n  if (exact && !isExact) return null;\n\n  return {\n    path: path, // the path pattern used to match\n    url: path === \"/\" && url === \"\" ? \"/\" : url, // the matched portion of the URL\n    isExact: isExact, // whether or not we matched exactly\n    params: keys.reduce(function (memo, key, index) {\n      memo[key.name] = values[index];\n      return memo;\n    }, {})\n  };\n};\n\nexport default matchPath;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}